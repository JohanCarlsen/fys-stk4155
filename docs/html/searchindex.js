Search.setIndex({"docnames": ["index", "project1", "project2", "project3"], "filenames": ["index.rst", "project1.rst", "project2.rst", "project3.rst"], "titles": ["FYS-STK4155, Applied Data Analysis and Machine Learning", "Project 1", "Project 2", "Project 3"], "terms": {"thi": [0, 1, 2], "i": [0, 1, 2], "document": [0, 1], "code": [0, 1], "have": 0, "develop": 0, "cours": 0, "univers": 0, "oslo": 0, "project": 0, "1": [0, 2], "regress": 0, "class": 0, "method": [0, 3], "ol": [0, 1, 2], "ridge_and_lasso": [0, 1], "plot_evolut": [0, 1], "bias_variance_tradeoff": [0, 1], "cross_valid": [0, 1], "calcul": [0, 2, 3], "modul": 0, "function": [0, 3], "set_siz": [0, 1], "frankes_funct": [0, 1], "compare_surfac": [0, 1], "2": [0, 1, 3], "artifici": 0, "neural": 0, "network": 0, "neuralnetwork": [0, 2], "fit": [0, 1, 2, 3], "predict": [0, 2, 3], "calculate_scor": [0, 2], "regressionanalysi": [0, 2], "x": [1, 2, 3], "y": [1, 2, 3], "set_param": [0, 2], "set_hyper_param": [0, 2], "run": [0, 1, 2], "logisticregress": [0, 2], "logist": 0, "preprocess": 0, "center": [0, 2], "norm_data_zero_on": [0, 2], "cost": 0, "meansquarederror": [0, 2], "loss": [2, 3], "crossentropi": [0, 2], "logloss": [0, 2], "activ": 0, "linear": [0, 2], "deriv": 2, "sigmoid": [0, 2], "3": [0, 1, 2], "src": 1, "x_data": 1, "y_data": 1, "z_data": 1, "none": [1, 2, 3], "name": 1, "sourc": [1, 2, 3], "ordinari": 1, "least": 1, "squar": [1, 2], "ridg": [1, 2], "lasso": 1, "data": [1, 3], "along": [1, 2], "ax": [1, 2], "type": [1, 2, 3], "array_lik": [1, 2, 3], "If": [1, 2, 3], "describ": 1, "2d": 1, "paramet": [1, 2, 3], "z": 1, "axi": [1, 2], "default": [1, 2, 3], "The": [1, 2, 3], "titl": 1, "certain": 1, "figur": [1, 2, 3], "set": [1, 2, 3], "dure": [1, 2, 3], "initi": [1, 2], "fignam": 1, "ha": [1, 2], "when": [1, 2], "call": 1, "str": [1, 2, 3], "option": [1, 2, 3], "n_poli": 1, "identity_test": 1, "fals": [1, 2, 3], "store_beta": 1, "true": [1, 2, 3], "begin": [1, 2, 3], "align": [1, 2, 3], "tild": [1, 2], "beta": [1, 2], "tx": 1, "ty": 1, "end": [1, 2, 3], "user": 1, "defin": 1, "polynomi": 1, "degre": 1, "int": [1, 2, 3], "bool": 1, "perform": [1, 2], "test": [1, 2], "see": 1, "implement": 1, "correct": [1, 3], "ie": [1, 2], "design": 1, "matrix": [1, 2, 3], "ident": 1, "mean": [1, 2, 3], "error": [1, 2], "should": 1, "0": [1, 2], "input": [1, 2, 3], "larg": 1, "chanc": 1, "valu": [1, 2, 3], "arrai": [1, 2, 3], "ensur": 1, "ar": [1, 2, 3], "store": 1, "return": [1, 2, 3], "opt_deg": 1, "where": [1, 3], "mse": [1, 2], "lowest": 1, "beta_opt": 1, "ndarrai": [1, 2, 3], "optim": [0, 1], "lambda_min": 1, "lambda_max": 1, "poly_deg": 1, "n_lambda": 1, "provid": [1, 2], "hat": 1, "lambda": 1, "mathbb": 1, "t": [1, 2], "float": [1, 2], "highest": [1, 3], "log_": [1, 2], "10": [1, 2], "order": 1, "number": [1, 2, 3], "element": 1, "comput": 1, "ridge_lasso_poly_deg": 1, "us": [1, 2, 3], "beta_opt_ridg": 1, "beta_opt_lasso": 1, "model": [1, 2], "add_lasso": 1, "add_zoom": 1, "scale_down": 1, "plot": [1, 2, 3], "evolut": [1, 2], "r2": [1, 2], "score": [1, 2, 3], "which": [1, 2], "curv": 1, "For": [1, 2], "save": [1, 3], "add": 1, "so": 1, "show": 1, "onli": [1, 2], "both": 1, "shown": 1, "zoom": 1, "mai": 1, "quit": 1, "high": 1, "rel": 1, "its": 1, "width": [1, 2], "scale": 1, "height": 1, "75": 1, "percent": 1, "max_degre": 1, "n_bootstrap": 1, "data_dim": 1, "best_deg_ol": 1, "bootstrap": 1, "bia": 1, "varianc": 1, "maximum": [1, 2, 3], "evalut": 1, "resampl": 1, "dimens": 1, "evalu": [1, 3], "beta_deg_ol": 1, "given": [1, 2], "assum": [1, 2], "from": [1, 2, 3], "same": [1, 2], "present": 1, "one": [1, 3], "As": 1, "traffic": 1, "can": 1, "veri": 1, "sampl": [1, 3], "too": 1, "big": 1, "lead": 1, "program": 1, "being": [1, 2], "kill": 1, "befor": [1, 2], "complet": 1, "n_kfold": 1, "tradeoff": 1, "result": [1, 2], "k": 1, "fold": 1, "cross": [1, 2], "valid": [1, 2], "concid": 1, "trade": 1, "off": 1, "happen": 1, "been": [1, 2], "displai": 1, "locat": 1, "best": [1, 2], "e": [1, 2], "eihter": 1, "calc": 1, "static": [1, 2], "r2_score": 1, "ytild": 1, "mean_sq_err": 1, "r2score": [1, 2], "lamb": 1, "x_test": 1, "ord_least_sq": 1, "regular": [1, 2], "ypred": 1, "create_x": 1, "include_on": 1, "creat": [1, 2, 3], "point": 1, "observ": 1, "col": 1, "subplot": 1, "size": [1, 2], "wifdth": 1, "equal": [1, 2], "golden": 1, "ratio": 1, "text": 1, "pt": 1, "possibl": 1, "255": 1, "46837": 1, "528": 1, "93675": 1, "how": [1, 2], "figsiz": 1, "tupl": 1, "base": 1, "note": [1, 2], "built": 1, "column": [1, 2], "revtex": 1, "To": 1, "obtain": 1, "appropri": 1, "your": 1, "command": 1, "columnwidth": 1, "textwidth": 1, "bodi": 1, "add_nois": 1, "frank": 1, "": 1, "weather": [1, 2], "gaussian": 1, "nois": 1, "epsilon": 1, "sim": 1, "mathcal": 1, "n": [1, 2], "sigma": [1, 2], "without": [1, 2], "linspac": 1, "surfac": 1, "reg_model": 1, "azim_view_init": 1, "45": 1, "cmap": 1, "terrain": 1, "side": 1, "comparison": 1, "map": [1, 2], "A": [1, 3], "np": [1, 2], "instanc": 1, "mesh": 1, "grid": 1, "avail": 1, "azimuth": 1, "angl": 1, "view": 1, "3d": 1, "colormap": 1, "ffnn": 2, "input_s": 2, "hidden_s": 2, "output_s": 2, "eta": 2, "alpha": 2, "hidden_activ": 2, "output_activ": 2, "cost_funct": 2, "epoch": 2, "batch_siz": 2, "solver": 0, "random_weight": 2, "classif": [2, 3], "node": [2, 3], "layer": 2, "list": 2, "structur": [2, 3], "hidden": 2, "g": 2, "20": 2, "consist": 2, "neuron": 2, "respect": [2, 3], "output": 2, "learn": 2, "rate": 2, "l2": 2, "relu": [0, 2], "lrelu": 2, "weight": 2, "depend": 2, "xavieriniti": 2, "heiniti": 2, "lecuniniti": 2, "other": 2, "than": 2, "log": 2, "entropi": [2, 3], "iter": 2, "minibatch": 2, "stochast": 2, "gradient": 2, "descent": 2, "n_datapoint": 2, "adam": [0, 2], "constant": [0, 2], "boolean": 2, "overwrit": 2, "normal": 2, "distribut": 2, "control": 2, "x_val": 2, "y_val": 2, "tol": 2, "0001": 2, "patienc": 2, "100": [], "verbos": 2, "train": [2, 3], "featur": [2, 3], "target": [2, 3], "them": 2, "after": 2, "each": 2, "toler": 2, "much": 2, "improv": 2, "between": [2, 3], "mani": 2, "inform": 2, "5": 2, "dataset": 2, "hard": 2, "ani": 2, "higher": 2, "otherwis": 2, "problem": 2, "larger": 2, "y_true": [2, 3], "y_pred": [2, 3], "metric": [0, 2], "accuraci": [2, 3], "gradient_desc": 2, "1000": [], "param": 2, "also": 2, "gd": 2, "sgd": 2, "plain": 2, "gradiend": 2, "learning_r": 2, "momentum": 2, "hyperparam": 2, "hyper": 2, "step": 2, "logreg": 2, "n_epoch": 2, "binari": [], "outcom": 2, "mathbf": 2, "frac": [2, 3], "c": 2, "sum_n": 2, "left": 2, "y_n": 2, "delta": 2, "right": 2, "4": [], "500": 2, "check": 2, "stop": 2, "rais": 2, "notimplementederror": 2, "subtract": 2, "divid": 2, "standard": 2, "deviat": 2, "centered_data": 2, "std": 2, "2x2": 2, "rang": 2, "cost_func": 2, "f": 2, "variabl": 2, "an": 2, "shape": [2, 3], "fill": 2, "ones": 2, "relat": 2, "parent": [], "directli": [], "reset": 2, "update_chang": 2, "Not": 2, "updat": 2, "chang": 2, "nabla": 2, "rho1": 2, "9": 2, "rho2": 2, "999": 2, "first": 2, "moment": 2, "second": 2, "rectifi": 2, "unit": 2, "els": 2, "get_score_evolut": [0, 2], "variable_eta": 2, "boolearn": 2, "schedul": 2, "limit": 2, "get": 2, "wether": 2, "slice": 2, "contain": 2, "converg": [], "linreg": 2, "200": 2, "constant_eta": 2, "lower": 2, "zero": 2, "remain": 2, "unchang": 2, "vari": 2, "get_score_evol": [0, 2], "up": 2, "until": 2, "score_ev": 2, "decis": 0, "tree": 0, "classici": 0, "score_evol": 2, "multilabel": 2, "argmax": 2, "classification_metr": 3, "abstract": [], "decisiontre": [0, 3], "decision_tre": 3, "max_depth": 3, "min_split": 3, "tthe": [], "n_data": 3, "n_featur": 3, "make": 3, "travers": 3, "precis": 3, "recal": 3, "subtre": 3, "grow": 3, "minimum": 3, "need": 3, "split": 3, "gini": 3, "positive_class": [], "prediciton": [], "mathrm": 3, "tp": 3, "fp": 3, "fn": 3, "all": 3, "confusion_matrix": [0, 3], "from_categor": [0, 3], "plot_tre": 3, "save_nam": 3, "format": 3, "pdf": 3, "filenam": 3, "label": 3, "posit": 3, "neg": 3, "against": 3, "mean_precis": 3, "mean_recal": 3, "print_metr": 3, "print": 3, "confus": 3, "cont_mat": 3, "revers": 3, "oper": 3, "hot": 3, "vector": 3, "numer": 3, "to_categor": [0, 3], "n_categori": 3, "integ": 3, "categori": 3, "onehot": 3, "plot_lay": [0, 2], "node_s": 2, "50": 2, "layer_spac": 2, "node_spac": 2, "lw": 2, "25": 2, "matplotlib": 2, "pyplot": 2, "scatter": 2, "distanc": 2, "defay\u00falt": 2, "vertic": 2, "line": 2, "axesubplot": 2}, "objects": {"activations": [[2, 0, 1, "", "Linear"], [2, 0, 1, "", "ReLU"], [2, 0, 1, "", "Sigmoid"]], "activations.Linear": [[2, 1, 1, "", "derivative"], [2, 1, 1, "", "function"]], "activations.ReLU": [[2, 1, 1, "", "derivative"], [2, 1, 1, "", "function"]], "activations.Sigmoid": [[2, 1, 1, "", "derivative"], [2, 1, 1, "", "function"]], "calc": [[1, 0, 1, "", "Calculate"]], "calc.Calculate": [[1, 1, 1, "", "R2_score"], [1, 1, 1, "", "Ridge"], [1, 1, 1, "", "create_X"], [1, 1, 1, "", "mean_sq_err"], [1, 1, 1, "", "ord_least_sq"]], "classification_metrics": [[3, 0, 1, "", "Metrics"], [3, 3, 1, "", "confusion_matrix"]], "classification_metrics.Metrics": [[3, 2, 1, "", "accuracy"], [3, 2, 1, "", "mean_precision"], [3, 2, 1, "", "mean_recall"], [3, 2, 1, "", "precision"], [3, 1, 1, "", "print_metrics"], [3, 2, 1, "", "recall"]], "cost_funcs": [[2, 0, 1, "", "CrossEntropy"], [2, 0, 1, "", "LogLoss"], [2, 0, 1, "", "MeanSquaredError"]], "cost_funcs.CrossEntropy": [[2, 1, 1, "", "loss"]], "cost_funcs.LogLoss": [[2, 1, 1, "", "loss"]], "cost_funcs.MeanSquaredError": [[2, 1, 1, "", "loss"]], "decision_tree": [[3, 0, 1, "", "DecisionTree"]], "decision_tree.DecisionTree": [[3, 1, 1, "", "fit"], [3, 1, 1, "", "plot_tree"], [3, 1, 1, "", "predict"]], "ffnn": [[2, 0, 1, "", "NeuralNetwork"]], "ffnn.NeuralNetwork": [[2, 1, 1, "", "calculate_score"], [2, 1, 1, "", "fit"], [2, 1, 1, "", "get_score_evolution"], [2, 1, 1, "", "plot_layers"], [2, 1, 1, "", "predict"]], "linreg": [[2, 0, 1, "", "RegressionAnalysis"]], "linreg.RegressionAnalysis": [[2, 2, 1, "", "X"], [2, 1, 1, "", "get_score_evol"], [2, 1, 1, "", "run"], [2, 1, 1, "", "set_hyper_params"], [2, 1, 1, "", "set_params"], [2, 2, 1, "", "y"]], "logreg": [[2, 0, 1, "", "LogisticRegression"]], "logreg.LogisticRegression": [[2, 1, 1, "", "fit"], [2, 1, 1, "", "predict"]], "preprocess": [[2, 3, 1, "", "center"], [3, 3, 1, "", "from_categorical"], [2, 3, 1, "", "norm_data_zero_one"], [3, 3, 1, "", "to_categorical"]], "solvers": [[2, 0, 1, "", "ADAM"], [2, 0, 1, "", "Constant"]], "solvers.ADAM": [[2, 2, 1, "", "eta"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "update_change"]], "solvers.Constant": [[2, 2, 1, "", "eta"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "update_change"]], "src": [[1, 0, 1, "", "Regression"], [1, 3, 1, "", "compare_surface"], [1, 3, 1, "", "frankes_function"], [1, 3, 1, "", "set_size"]], "src.Regression": [[1, 1, 1, "", "OLS"], [1, 1, 1, "", "bias_variance_tradeoff"], [1, 1, 1, "", "cross_validation"], [1, 2, 1, "", "name"], [1, 1, 1, "", "plot_evolution"], [1, 1, 1, "", "ridge_and_lasso"], [1, 2, 1, "", "z_data"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"]}, "titleterms": {"fy": 0, "stk4155": 0, "appli": 0, "data": [0, 2], "analysi": [0, 2], "machin": 0, "learn": 0, "content": 0, "project": [1, 2, 3], "1": 1, "regress": [1, 2], "class": [1, 2, 3], "method": [1, 2], "calcul": 1, "modul": 1, "function": [1, 2], "2": 2, "artifici": 2, "neural": 2, "network": 2, "logist": 2, "preprocess": [2, 3], "cost": 2, "activ": 2, "3": 3, "solver": 2, "optim": 2, "decis": 3, "tree": 3, "classici": 3, "metric": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"FYS-STK4155, Applied Data Analysis and Machine Learning": [[0, "fys-stk4155-applied-data-analysis-and-machine-learning"]], "Contents:": [[0, null]], "Project 1": [[1, "project-1"]], "Regression class": [[1, "regression-class"]], "Regression methods": [[1, "regression-methods"]], "Calculation module": [[1, "calculation-module"]], "Functions": [[1, "functions"]], "Project 2": [[2, "project-2"]], "Artificial neural network class": [[2, "artificial-neural-network-class"]], "Artificial neural network methods": [[2, "artificial-neural-network-methods"]], "Regression analysis class": [[2, "regression-analysis-class"]], "Regression analysis methods": [[2, "regression-analysis-methods"]], "Logistic regression class": [[2, "logistic-regression-class"]], "Logistic regression methods": [[2, "logistic-regression-methods"]], "Preprocessing of data": [[2, "preprocessing-of-data"]], "Cost functions": [[2, "cost-functions"]], "Solver optimizers": [[2, "solver-optimizers"]], "Activation functions": [[2, "activation-functions"]], "Project 3": [[3, "project-3"]], "Decision tree class": [[3, "decision-tree-class"]], "Classiciation metrics": [[3, "classiciation-metrics"]], "Preprocessing": [[3, "preprocessing"]]}, "indexentries": {"adam (class in solvers)": [[2, "solvers.ADAM"]], "constant (class in solvers)": [[2, "solvers.Constant"]], "crossentropy (class in cost_funcs)": [[2, "cost_funcs.CrossEntropy"]], "linear (class in activations)": [[2, "activations.Linear"]], "logloss (class in cost_funcs)": [[2, "cost_funcs.LogLoss"]], "logisticregression (class in logreg)": [[2, "logreg.LogisticRegression"]], "meansquarederror (class in cost_funcs)": [[2, "cost_funcs.MeanSquaredError"]], "neuralnetwork (class in ffnn)": [[2, "ffnn.NeuralNetwork"]], "relu (class in activations)": [[2, "activations.ReLU"]], "regressionanalysis (class in linreg)": [[2, "linreg.RegressionAnalysis"]], "sigmoid (class in activations)": [[2, "activations.Sigmoid"]], "x (linreg.regressionanalysis attribute)": [[2, "linreg.RegressionAnalysis.X"]], "calculate_score() (ffnn.neuralnetwork method)": [[2, "ffnn.NeuralNetwork.calculate_score"]], "center() (in module preprocess)": [[2, "preprocess.center"]], "derivative() (activations.linear static method)": [[2, "activations.Linear.derivative"]], "derivative() (activations.relu static method)": [[2, "activations.ReLU.derivative"]], "derivative() (activations.sigmoid static method)": [[2, "activations.Sigmoid.derivative"]], "eta (solvers.adam attribute)": [[2, "solvers.ADAM.eta"]], "eta (solvers.constant attribute)": [[2, "solvers.Constant.eta"]], "fit() (ffnn.neuralnetwork method)": [[2, "ffnn.NeuralNetwork.fit"]], "fit() (logreg.logisticregression method)": [[2, "logreg.LogisticRegression.fit"]], "function() (activations.linear static method)": [[2, "activations.Linear.function"]], "function() (activations.relu static method)": [[2, "activations.ReLU.function"]], "function() (activations.sigmoid static method)": [[2, "activations.Sigmoid.function"]], "get_score_evol() (linreg.regressionanalysis method)": [[2, "linreg.RegressionAnalysis.get_score_evol"]], "get_score_evolution() (ffnn.neuralnetwork method)": [[2, "ffnn.NeuralNetwork.get_score_evolution"]], "loss() (cost_funcs.crossentropy static method)": [[2, "cost_funcs.CrossEntropy.loss"]], "loss() (cost_funcs.logloss static method)": [[2, "cost_funcs.LogLoss.loss"]], "loss() (cost_funcs.meansquarederror static method)": [[2, "cost_funcs.MeanSquaredError.loss"]], "norm_data_zero_one() (in module preprocess)": [[2, "preprocess.norm_data_zero_one"]], "plot_layers() (ffnn.neuralnetwork method)": [[2, "ffnn.NeuralNetwork.plot_layers"]], "predict() (ffnn.neuralnetwork method)": [[2, "ffnn.NeuralNetwork.predict"]], "predict() (logreg.logisticregression method)": [[2, "logreg.LogisticRegression.predict"]], "reset() (solvers.adam method)": [[2, "solvers.ADAM.reset"]], "reset() (solvers.constant method)": [[2, "solvers.Constant.reset"]], "run() (linreg.regressionanalysis method)": [[2, "linreg.RegressionAnalysis.run"]], "set_hyper_params() (linreg.regressionanalysis method)": [[2, "linreg.RegressionAnalysis.set_hyper_params"]], "set_params() (linreg.regressionanalysis method)": [[2, "linreg.RegressionAnalysis.set_params"]], "update_change() (solvers.adam method)": [[2, "solvers.ADAM.update_change"]], "update_change() (solvers.constant method)": [[2, "solvers.Constant.update_change"]], "y (linreg.regressionanalysis attribute)": [[2, "linreg.RegressionAnalysis.y"]], "decisiontree (class in decision_tree)": [[3, "decision_tree.DecisionTree"]], "metrics (class in classification_metrics)": [[3, "classification_metrics.Metrics"]], "accuracy (classification_metrics.metrics attribute)": [[3, "classification_metrics.Metrics.accuracy"]], "confusion_matrix() (in module classification_metrics)": [[3, "classification_metrics.confusion_matrix"]], "fit() (decision_tree.decisiontree method)": [[3, "decision_tree.DecisionTree.fit"]], "from_categorical() (in module preprocess)": [[3, "preprocess.from_categorical"]], "mean_precision (classification_metrics.metrics attribute)": [[3, "classification_metrics.Metrics.mean_precision"]], "mean_recall (classification_metrics.metrics attribute)": [[3, "classification_metrics.Metrics.mean_recall"]], "plot_tree() (decision_tree.decisiontree method)": [[3, "decision_tree.DecisionTree.plot_tree"]], "precision (classification_metrics.metrics attribute)": [[3, "classification_metrics.Metrics.precision"]], "predict() (decision_tree.decisiontree method)": [[3, "decision_tree.DecisionTree.predict"]], "print_metrics() (classification_metrics.metrics method)": [[3, "classification_metrics.Metrics.print_metrics"]], "recall (classification_metrics.metrics attribute)": [[3, "classification_metrics.Metrics.recall"]], "to_categorical() (in module preprocess)": [[3, "preprocess.to_categorical"]]}})